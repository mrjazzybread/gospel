"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[448],{5680:(e,a,n)=>{n.d(a,{xA:()=>o,yg:()=>N});var t=n(6540);function s(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function i(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);a&&(t=t.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,t)}return n}function m(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?i(Object(n),!0).forEach((function(a){s(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function r(e,a){if(null==e)return{};var n,t,s=function(e,a){if(null==e)return{};var n,t,s={},i=Object.keys(e);for(t=0;t<i.length;t++)n=i[t],a.indexOf(n)>=0||(s[n]=e[n]);return s}(e,a);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)n=i[t],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var p=t.createContext({}),l=function(e){var a=t.useContext(p),n=a;return e&&(n="function"==typeof e?e(a):m(m({},a),e)),n},o=function(e){var a=l(e.components);return t.createElement(p.Provider,{value:a},e.children)},g="mdxType",c={inlineCode:"code",wrapper:function(e){var a=e.children;return t.createElement(t.Fragment,{},a)}},y=t.forwardRef((function(e,a){var n=e.components,s=e.mdxType,i=e.originalType,p=e.parentName,o=r(e,["components","mdxType","originalType","parentName"]),g=l(n),y=s,N=g["".concat(p,".").concat(y)]||g[y]||c[y]||i;return n?t.createElement(N,m(m({ref:a},o),{},{components:n})):t.createElement(N,m({ref:a},o))}));function N(e,a){var n=arguments,s=a&&a.mdxType;if("string"==typeof e||s){var i=n.length,m=new Array(i);m[0]=y;var r={};for(var p in a)hasOwnProperty.call(a,p)&&(r[p]=a[p]);r.originalType=e,r[g]="string"==typeof e?e:s,m[1]=r;for(var l=2;l<i;l++)m[l]=n[l];return t.createElement.apply(null,m)}return t.createElement.apply(null,n)}y.displayName="MDXCreateElement"},7664:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>p,contentTitle:()=>m,default:()=>c,frontMatter:()=>i,metadata:()=>r,toc:()=>l});var t=n(8168),s=(n(6540),n(5680));const i={sidebar_position:2},m="Fibonacci Numbers",r={unversionedId:"walkthroughs/fibonacci",id:"walkthroughs/fibonacci",title:"Fibonacci Numbers",description:"In this example, we'll look into specifying an efficient implementation of a",source:"@site/docs/walkthroughs/fibonacci.md",sourceDirName:"walkthroughs",slug:"/walkthroughs/fibonacci",permalink:"/gospel/walkthroughs/fibonacci",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Introduction",permalink:"/gospel/walkthroughs/introduction"},next:{title:"Mutable Queues",permalink:"/gospel/walkthroughs/mutable-queue"}},p={},l=[{value:"The Problem",id:"the-problem",level:2},{value:"A Simple Contract",id:"a-simple-contract",level:2},{value:"Simplify by Using a Ghost Argument",id:"simplify-by-using-a-ghost-argument",level:2}],o={toc:l},g="wrapper";function c(e){let{components:a,...n}=e;return(0,s.yg)(g,(0,t.A)({},o,n,{components:a,mdxType:"MDXLayout"}),(0,s.yg)("h1",{id:"fibonacci-numbers"},"Fibonacci Numbers"),(0,s.yg)("p",null,"In this example, we'll look into specifying an efficient implementation of a\nfunction computing Fibonacci numbers. This example is adapted from the article\n",(0,s.yg)("em",{parentName:"p"},"The Spirit of Ghost Code"),(0,s.yg)("sup",{parentName:"p",id:"fnref-1"},(0,s.yg)("a",{parentName:"sup",href:"#fn-1",className:"footnote-ref"},"1")),"."),(0,s.yg)("h2",{id:"the-problem"},"The Problem"),(0,s.yg)("p",null,"Recall that ",(0,s.yg)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Fibonacci_number"},"Fibonacci numbers"),"\nare defined as follows:"),(0,s.yg)("div",{className:"math math-display"},(0,s.yg)("span",{parentName:"div",className:"katex-display"},(0,s.yg)("span",{parentName:"span",className:"katex"},(0,s.yg)("span",{parentName:"span",className:"katex-mathml"},(0,s.yg)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},(0,s.yg)("semantics",{parentName:"math"},(0,s.yg)("mrow",{parentName:"semantics"},(0,s.yg)("msub",{parentName:"mrow"},(0,s.yg)("mi",{parentName:"msub"},"F"),(0,s.yg)("mn",{parentName:"msub"},"0")),(0,s.yg)("mo",{parentName:"mrow"},"="),(0,s.yg)("mn",{parentName:"mrow"},"0"),(0,s.yg)("mspace",{parentName:"mrow",linebreak:"newline"}),(0,s.yg)("msub",{parentName:"mrow"},(0,s.yg)("mi",{parentName:"msub"},"F"),(0,s.yg)("mn",{parentName:"msub"},"1")),(0,s.yg)("mo",{parentName:"mrow"},"="),(0,s.yg)("mn",{parentName:"mrow"},"1"),(0,s.yg)("mspace",{parentName:"mrow",linebreak:"newline"}),(0,s.yg)("msub",{parentName:"mrow"},(0,s.yg)("mi",{parentName:"msub"},"F"),(0,s.yg)("mi",{parentName:"msub"},"i")),(0,s.yg)("mo",{parentName:"mrow"},"="),(0,s.yg)("msub",{parentName:"mrow"},(0,s.yg)("mi",{parentName:"msub"},"F"),(0,s.yg)("mrow",{parentName:"msub"},(0,s.yg)("mi",{parentName:"mrow"},"i"),(0,s.yg)("mo",{parentName:"mrow"},"\u2212"),(0,s.yg)("mn",{parentName:"mrow"},"1"))),(0,s.yg)("mo",{parentName:"mrow"},"+"),(0,s.yg)("msub",{parentName:"mrow"},(0,s.yg)("mi",{parentName:"msub"},"F"),(0,s.yg)("mrow",{parentName:"msub"},(0,s.yg)("mi",{parentName:"mrow"},"i"),(0,s.yg)("mo",{parentName:"mrow"},"\u2212"),(0,s.yg)("mn",{parentName:"mrow"},"2")))),(0,s.yg)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"F_0 = 0\\\\ F_1 = 1\\\\ F_i = F_{i-1} + F_{i-2}")))),(0,s.yg)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,s.yg)("span",{parentName:"span",className:"base"},(0,s.yg)("span",{parentName:"span",className:"strut",style:{height:"0.8333em",verticalAlign:"-0.15em"}}),(0,s.yg)("span",{parentName:"span",className:"mord"},(0,s.yg)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.13889em"}},"F"),(0,s.yg)("span",{parentName:"span",className:"msupsub"},(0,s.yg)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,s.yg)("span",{parentName:"span",className:"vlist-r"},(0,s.yg)("span",{parentName:"span",className:"vlist",style:{height:"0.3011em"}},(0,s.yg)("span",{parentName:"span",style:{top:"-2.55em",marginLeft:"-0.1389em",marginRight:"0.05em"}},(0,s.yg)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,s.yg)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,s.yg)("span",{parentName:"span",className:"mord mtight"},"0")))),(0,s.yg)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,s.yg)("span",{parentName:"span",className:"vlist-r"},(0,s.yg)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,s.yg)("span",{parentName:"span"})))))),(0,s.yg)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2778em"}}),(0,s.yg)("span",{parentName:"span",className:"mrel"},"="),(0,s.yg)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2778em"}})),(0,s.yg)("span",{parentName:"span",className:"base"},(0,s.yg)("span",{parentName:"span",className:"strut",style:{height:"0.6444em"}}),(0,s.yg)("span",{parentName:"span",className:"mord"},"0")),(0,s.yg)("span",{parentName:"span",className:"mspace newline"}),(0,s.yg)("span",{parentName:"span",className:"base"},(0,s.yg)("span",{parentName:"span",className:"strut",style:{height:"0.8333em",verticalAlign:"-0.15em"}}),(0,s.yg)("span",{parentName:"span",className:"mord"},(0,s.yg)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.13889em"}},"F"),(0,s.yg)("span",{parentName:"span",className:"msupsub"},(0,s.yg)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,s.yg)("span",{parentName:"span",className:"vlist-r"},(0,s.yg)("span",{parentName:"span",className:"vlist",style:{height:"0.3011em"}},(0,s.yg)("span",{parentName:"span",style:{top:"-2.55em",marginLeft:"-0.1389em",marginRight:"0.05em"}},(0,s.yg)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,s.yg)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,s.yg)("span",{parentName:"span",className:"mord mtight"},"1")))),(0,s.yg)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,s.yg)("span",{parentName:"span",className:"vlist-r"},(0,s.yg)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,s.yg)("span",{parentName:"span"})))))),(0,s.yg)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2778em"}}),(0,s.yg)("span",{parentName:"span",className:"mrel"},"="),(0,s.yg)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2778em"}})),(0,s.yg)("span",{parentName:"span",className:"base"},(0,s.yg)("span",{parentName:"span",className:"strut",style:{height:"0.6444em"}}),(0,s.yg)("span",{parentName:"span",className:"mord"},"1")),(0,s.yg)("span",{parentName:"span",className:"mspace newline"}),(0,s.yg)("span",{parentName:"span",className:"base"},(0,s.yg)("span",{parentName:"span",className:"strut",style:{height:"0.8333em",verticalAlign:"-0.15em"}}),(0,s.yg)("span",{parentName:"span",className:"mord"},(0,s.yg)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.13889em"}},"F"),(0,s.yg)("span",{parentName:"span",className:"msupsub"},(0,s.yg)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,s.yg)("span",{parentName:"span",className:"vlist-r"},(0,s.yg)("span",{parentName:"span",className:"vlist",style:{height:"0.3117em"}},(0,s.yg)("span",{parentName:"span",style:{top:"-2.55em",marginLeft:"-0.1389em",marginRight:"0.05em"}},(0,s.yg)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,s.yg)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,s.yg)("span",{parentName:"span",className:"mord mathnormal mtight"},"i")))),(0,s.yg)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,s.yg)("span",{parentName:"span",className:"vlist-r"},(0,s.yg)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,s.yg)("span",{parentName:"span"})))))),(0,s.yg)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2778em"}}),(0,s.yg)("span",{parentName:"span",className:"mrel"},"="),(0,s.yg)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2778em"}})),(0,s.yg)("span",{parentName:"span",className:"base"},(0,s.yg)("span",{parentName:"span",className:"strut",style:{height:"0.8917em",verticalAlign:"-0.2083em"}}),(0,s.yg)("span",{parentName:"span",className:"mord"},(0,s.yg)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.13889em"}},"F"),(0,s.yg)("span",{parentName:"span",className:"msupsub"},(0,s.yg)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,s.yg)("span",{parentName:"span",className:"vlist-r"},(0,s.yg)("span",{parentName:"span",className:"vlist",style:{height:"0.3117em"}},(0,s.yg)("span",{parentName:"span",style:{top:"-2.55em",marginLeft:"-0.1389em",marginRight:"0.05em"}},(0,s.yg)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,s.yg)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,s.yg)("span",{parentName:"span",className:"mord mtight"},(0,s.yg)("span",{parentName:"span",className:"mord mathnormal mtight"},"i"),(0,s.yg)("span",{parentName:"span",className:"mbin mtight"},"\u2212"),(0,s.yg)("span",{parentName:"span",className:"mord mtight"},"1"))))),(0,s.yg)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,s.yg)("span",{parentName:"span",className:"vlist-r"},(0,s.yg)("span",{parentName:"span",className:"vlist",style:{height:"0.2083em"}},(0,s.yg)("span",{parentName:"span"})))))),(0,s.yg)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222em"}}),(0,s.yg)("span",{parentName:"span",className:"mbin"},"+"),(0,s.yg)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222em"}})),(0,s.yg)("span",{parentName:"span",className:"base"},(0,s.yg)("span",{parentName:"span",className:"strut",style:{height:"0.8917em",verticalAlign:"-0.2083em"}}),(0,s.yg)("span",{parentName:"span",className:"mord"},(0,s.yg)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.13889em"}},"F"),(0,s.yg)("span",{parentName:"span",className:"msupsub"},(0,s.yg)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,s.yg)("span",{parentName:"span",className:"vlist-r"},(0,s.yg)("span",{parentName:"span",className:"vlist",style:{height:"0.3117em"}},(0,s.yg)("span",{parentName:"span",style:{top:"-2.55em",marginLeft:"-0.1389em",marginRight:"0.05em"}},(0,s.yg)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,s.yg)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,s.yg)("span",{parentName:"span",className:"mord mtight"},(0,s.yg)("span",{parentName:"span",className:"mord mathnormal mtight"},"i"),(0,s.yg)("span",{parentName:"span",className:"mbin mtight"},"\u2212"),(0,s.yg)("span",{parentName:"span",className:"mord mtight"},"2"))))),(0,s.yg)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,s.yg)("span",{parentName:"span",className:"vlist-r"},(0,s.yg)("span",{parentName:"span",className:"vlist",style:{height:"0.2083em"}},(0,s.yg)("span",{parentName:"span"}))))))))))),(0,s.yg)("p",null,"To begin, let's introduce this definition into the Gospel world by using an\nuninterpreted logical function along with an axiom defining it."),(0,s.yg)("pre",null,(0,s.yg)("code",{parentName:"pre",className:"language-ocaml"},"(*@ function fibonacci (n: integer) : integer *)\n(*@ axiom a:\n         fibonacci 0 = 0\n      /\\ fibonacci 1 = 1\n      /\\ forall n. n >= 2 -> fibonacci n = fibonacci (n-1) + fibonacci (n-2) *)\n")),(0,s.yg)("p",null,"Below is an implementation of such a function. When ",(0,s.yg)("inlineCode",{parentName:"p"},"a")," and ",(0,s.yg)("inlineCode",{parentName:"p"},"b")," are two\nconsecutive Fibonacci numbers, the following function computes the ",(0,s.yg)("inlineCode",{parentName:"p"},"n"),"th number\nahead of ",(0,s.yg)("inlineCode",{parentName:"p"},"a"),". Hence, ",(0,s.yg)("inlineCode",{parentName:"p"},"fib n 0 1")," is the ",(0,s.yg)("inlineCode",{parentName:"p"},"n"),"th Fibonacci number."),(0,s.yg)("pre",null,(0,s.yg)("code",{parentName:"pre",className:"language-ocaml",metastring:"implementationSyntax",implementationSyntax:!0},'let rec fib n a b =\n  if n < 0 then invalid_arg "n must be non-negative";\n  if n = 0 then a\n  else fib (n-1) b (a+b)\n')),(0,s.yg)("p",null,"Its signature is simple:"),(0,s.yg)("pre",null,(0,s.yg)("code",{parentName:"pre",className:"language-ocaml"},"val fib : int -> int -> int -> int\n")),(0,s.yg)("h2",{id:"a-simple-contract"},"A Simple Contract"),(0,s.yg)("p",null,"Let's write a first contract for this interface."),(0,s.yg)("pre",null,(0,s.yg)("code",{parentName:"pre",className:"language-ocaml"},"val fib : int -> int -> int -> int\n(*@ r = fib n a b\n    checks n >= 0\n    requires exists i.\n               i >= 0 /\\ a = fibonacci i /\\ b = fibonacci (i+1)\n    ensures forall i.\n               i >= 0 /\\ a = fibonacci i /\\ b = fibonacci (i+1)\n               -> r = fibonacci (i+n) *)\n")),(0,s.yg)("p",null,"The contract is pretty straightforward:"),(0,s.yg)("ul",null,(0,s.yg)("li",{parentName:"ul"},"The first precondition states that ",(0,s.yg)("inlineCode",{parentName:"li"},"n")," must be non-negative. If ",(0,s.yg)("inlineCode",{parentName:"li"},"n"),"\nis negative, the function raises an exception, so this is a strong\nrequirement."),(0,s.yg)("li",{parentName:"ul"},"The second precondition states that ",(0,s.yg)("inlineCode",{parentName:"li"},"a")," and ",(0,s.yg)("inlineCode",{parentName:"li"},"b")," are consecutive Fibonacci\nnumbers."),(0,s.yg)("li",{parentName:"ul"},"The postcondition specifies that if ",(0,s.yg)("inlineCode",{parentName:"li"},"a")," is the ",(0,s.yg)("inlineCode",{parentName:"li"},"i"),"th Fibonacci number, and\n",(0,s.yg)("inlineCode",{parentName:"li"},"b")," is the ",(0,s.yg)("inlineCode",{parentName:"li"},"i+1"),"th Fibonacci number, then ",(0,s.yg)("inlineCode",{parentName:"li"},"r")," (the result of the\ncomputation) is the ",(0,s.yg)("inlineCode",{parentName:"li"},"i+n"),"th Fibonacci number.")),(0,s.yg)("p",null,"Although this specification isn't complicated, it's\nquite verbose and repetitive. The term ",(0,s.yg)("inlineCode",{parentName:"p"},"i >= 0 /\\ a = fibonacci i /\\ b =\nfibonacci (i+1)")," is repeated, and it actually refers to the same value of ",(0,s.yg)("inlineCode",{parentName:"p"},"i"),"\nin both occurrences. We can certainly do better."),(0,s.yg)("h2",{id:"simplify-by-using-a-ghost-argument"},"Simplify by Using a Ghost Argument"),(0,s.yg)("p",null,"Let's imagine for a moment that our ",(0,s.yg)("inlineCode",{parentName:"p"},"fib")," function takes an additional\nargument, ",(0,s.yg)("inlineCode",{parentName:"p"},"i"),", representing the index of ",(0,s.yg)("inlineCode",{parentName:"p"},"a")," in the Fibonacci sequence (the same\n",(0,s.yg)("inlineCode",{parentName:"p"},"i")," that we've been using in the specification so far). Its contract could look\nlike:"),(0,s.yg)("pre",null,(0,s.yg)("code",{parentName:"pre",className:"language-ocaml"},"val fib : i:int -> int -> int -> int -> int\n(*@ r = fib ~i n a b\n    checks n >= 0\n    requires i >= 0 /\\ a = fibonacci i /\\ b = fibonacci (i+1)\n    ensures r = fibonacci (i+n) *)\n")),(0,s.yg)("p",null,"We don't need to quantify over ",(0,s.yg)("inlineCode",{parentName:"p"},"i")," anymore, since it's provided to the\nfunction, but we still need to state the preconditions that apply to it (see the\nsecond clause). We don't need to repeat the previous condition on ",(0,s.yg)("inlineCode",{parentName:"p"},"i")," either.\nIf it holds in the prestate, then it also holds in the poststate because nothing\nhere is mutable."),(0,s.yg)("p",null,"This contract is much easier to write, and more importantly, it's much easier to\nread and to reason about. We cheated a bit though: ",(0,s.yg)("inlineCode",{parentName:"p"},"fib")," does not take this ",(0,s.yg)("inlineCode",{parentName:"p"},"i"),"\nargument, so modifying it for the sole purpose of specification seems quite\nintrusive."),(0,s.yg)("p",null,"To overcome this issue, Gospel provides ",(0,s.yg)("em",{parentName:"p"},"ghost parameters"),". It lets you\nintroduce logical arguments (or return values) that don't exist initially, so\nyou can use them in the specifications and hopefully make them easier to\nunderstand."),(0,s.yg)("p",null,"Thus, we can rewrite our last attempt by using this feature and benefit from\n",(0,s.yg)("inlineCode",{parentName:"p"},"i")," being an argument without actually modifying the OCaml interface or\nimplementation."),(0,s.yg)("pre",null,(0,s.yg)("code",{parentName:"pre",className:"language-ocaml"},"val fib : int -> int -> int -> int\n(*@ r = fib [i: integer] n a b\n    checks n >= 0\n    requires i >= 0 /\\ a = fibonacci i /\\ b = fibonacci (i+1)\n    ensures r = fibonacci (i+n) *)\n")),(0,s.yg)("p",null,"We're done! Using ghost parameters allows you to write elegant and concise\ncontracts in places that would otherwise require complex constructs and\nrepetitions."),(0,s.yg)("div",{className:"footnotes"},(0,s.yg)("hr",{parentName:"div"}),(0,s.yg)("ol",{parentName:"div"},(0,s.yg)("li",{parentName:"ol",id:"fn-1"},"Jean-Christophe Filli\xe2tre, L\xe9on Gondelman, Andrei Paskevich. ",(0,s.yg)("em",{parentName:"li"},"The Spirit\nof Ghost Code"),". Formal Methods in System Design, Springer Verlag, 2016, 48\n(3), pp.152-174.\n\u27e8",(0,s.yg)("a",{parentName:"li",href:"https://dx.doi.org/10.1007/s10703-016-0243-x"},"10.1007/s10703-016-0243-x"),"\u27e9.\n\u27e8",(0,s.yg)("a",{parentName:"li",href:"https://hal.archives-ouvertes.fr/hal-01396864v1"},"hal-01396864"),"\u27e9",(0,s.yg)("a",{parentName:"li",href:"#fnref-1",className:"footnote-backref"},"\u21a9")))))}c.isMDXComponent=!0}}]);