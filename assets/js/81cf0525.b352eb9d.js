"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[787],{5680:(e,n,t)=>{t.d(n,{xA:()=>c,yg:()=>f});var a=t(6540);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,a,i=function(e,n){if(null==e)return{};var t,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var l=a.createContext({}),p=function(e){var n=a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},c=function(e){var n=p(e.components);return a.createElement(l.Provider,{value:n},e.children)},m="mdxType",g={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},u=a.forwardRef((function(e,n){var t=e.components,i=e.mdxType,r=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),m=p(t),u=i,f=m["".concat(l,".").concat(u)]||m[u]||g[u]||r;return t?a.createElement(f,o(o({ref:n},c),{},{components:t})):a.createElement(f,o({ref:n},c))}));function f(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var r=t.length,o=new Array(r);o[0]=u;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s[m]="string"==typeof e?e:i,o[1]=s;for(var p=2;p<r;p++)o[p]=t[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}u.displayName="MDXCreateElement"},2734:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>g,frontMatter:()=>r,metadata:()=>s,toc:()=>p});var a=t(8168),i=(t(6540),t(5680));const r={sidebar_position:1},o="Gospel Special Comment Syntax",s={unversionedId:"language/syntax",id:"language/syntax",title:"Gospel Special Comment Syntax",description:"Gospel specifications are written in interface files (.mli). They are written",source:"@site/docs/language/syntax.md",sourceDirName:"language",slug:"/language/syntax",permalink:"/gospel/language/syntax",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Union-find",permalink:"/gospel/walkthroughs/union-find"},next:{title:"Lexical Conventions",permalink:"/gospel/language/lexical-conventions"}},l={},p=[{value:"Specifications and Documentation Comments",id:"specifications-and-documentation-comments",level:2}],c={toc:p},m="wrapper";function g(e){let{components:n,...t}=e;return(0,i.yg)(m,(0,a.A)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,i.yg)("h1",{id:"gospel-special-comment-syntax"},"Gospel Special Comment Syntax"),(0,i.yg)("p",null,"Gospel specifications are written in interface files (",(0,i.yg)("inlineCode",{parentName:"p"},".mli"),"). They are written\nin special comments, starting with the ",(0,i.yg)("inlineCode",{parentName:"p"},"@")," character",(0,i.yg)("sup",{parentName:"p",id:"fnref-1"},(0,i.yg)("a",{parentName:"sup",href:"#fn-1",className:"footnote-ref"},"1")),":"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-ocaml"},"val f: int -> int           (* An OCaml value declaration *)\n(*@ y = f x\n    ensures x > 0 *)        (* Its Gospel specification   *)\n\n(*@ type t *)               (* A ghost type declaration   *)\n(*@ ephemeral\n    model size: int *)      (* Its Gospel specification   *)\n")),(0,i.yg)("p",null,"Those comments must be located ",(0,i.yg)("em",{parentName:"p"},"after")," the item they specify."),(0,i.yg)("admonition",{type:"tip"},(0,i.yg)("p",{parentName:"admonition"},"Gospel is using a preprocessor to turn those special comments into OCaml\nattributes behind the scene before feeding the result to the standard OCaml\nparser (see the ",(0,i.yg)("a",{parentName:"p",href:"attributes"},"appendix page")," for more information)."),(0,i.yg)("p",{parentName:"admonition"},"This has the following consequence: Gospel special comments can only appear at a\npositions where OCaml accepts attributes. So given the following interface\n",(0,i.yg)("inlineCode",{parentName:"p"},"misplaced.mli"),":"),(0,i.yg)("pre",{parentName:"admonition"},(0,i.yg)("code",{parentName:"pre",className:"language-ocaml",metastring:"invalidSyntax",invalidSyntax:!0},"val f : int -> (*@ misplaced *) int\n")),(0,i.yg)("p",{parentName:"admonition"},(0,i.yg)("inlineCode",{parentName:"p"},"gospel check misplaced.mli")," will complain with the following somewhat\nsurprising message:"),(0,i.yg)("pre",{parentName:"admonition"},(0,i.yg)("code",{parentName:"pre"},"1 | val f : int -> (*@ misplaced *) int\n                   ^^^\nError: Syntax error.\n"))),(0,i.yg)("h2",{id:"specifications-and-documentation-comments"},"Specifications and Documentation Comments"),(0,i.yg)("p",null,"Note that Gospel annotations can be combined with traditional documentation\ncomments. For example:"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-ocaml",metastring:"invalidSyntax",invalidSyntax:!0},"val eucl_division: int -> int -> int * int\n(** this is an implementation of Euclidean division *)\n(*@ q, r = eucl_division x y\n    ... *)\n")),(0,i.yg)("div",{className:"footnotes"},(0,i.yg)("hr",{parentName:"div"}),(0,i.yg)("ol",{parentName:"div"},(0,i.yg)("li",{parentName:"ol",id:"fn-1"},"Existing specification languages for other host languages introduced this\nnotation, ",(0,i.yg)("em",{parentName:"li"},"e.g.,")," ",(0,i.yg)("a",{parentName:"li",href:"https://www.cs.ucf.edu/~leavens/JML/index.shtml"},"JML")," for\nJava and ",(0,i.yg)("a",{parentName:"li",href:"https://frama-c.com/html/acsl.html"},"ACSL")," for C. Hence Gospel\nalso uses this convention.",(0,i.yg)("a",{parentName:"li",href:"#fnref-1",className:"footnote-backref"},"\u21a9")))))}g.isMDXComponent=!0}}]);