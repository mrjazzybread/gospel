(**************************************************************************)
(*                                                                        *)
(*  GOSPEL -- A Specification Language for OCaml                          *)
(*                                                                        *)
(*  Copyright (c) 2018- The VOCaL Project                                 *)
(*                                                                        *)
(*  This software is free software, distributed under the MIT license     *)
(*  (as described in file LICENSE enclosed).                              *)
(**************************************************************************)

(** Positive tests for the definition of functions *)

(* Abstract functions *)
(*@ function f1 : integer *)
(*@ function f2 (n : integer) : integer *)
(*@ function f3 (n1 : integer) (n2 : integer) : integer *)
(*@ function F1 : integer *)
(*@ function F2 (n : integer) : integer *)
(*@ function F3 (n1 : integer) (n2 : integer) : integer *)

(* Concrete functions *)
(*@ function f4 : integer = 0 + 0 + 0 *)
(*@ function f5 (n : integer) : integer = 0 + 0 + 0 *)
(*@ function f6 (n1 : integer) (n2 : integer) : integer = 0 + 0 + 0 *)
(*@ function F4 : integer = 0 + 0 + 0 *)
(*@ function F5 (n : integer) : integer = 0 + 0 + 0 *)
(*@ function F6 (n1 : integer) (n2 : integer) : integer = 0 + 0 + 0 *)

(* Abstract predicates *)
(*@ predicate p1 *)
(*@ predicate p2 (n : integer) *)
(*@ predicate p3 (n1 : integer) (n2 : integer) *)
(*@ predicate P1 *)
(*@ predicate P2 (n : integer) *)
(*@ predicate P3 (n1 : integer) (n2 : integer) *)

(* Concrete predicates *)
(*@ predicate p4 = True /\ True *)
(*@ predicate p5 (n : integer) = True /\ True *)
(*@ predicate p6 (n1 : integer) (n2 : integer) = n1 = n2 *)
(*@ predicate P4 = True /\ True *)
(*@ predicate P5 (n : integer) = True /\ True *)
(*@ predicate P6 (n1 : integer) (n2 : integer) = n1 = n2 *)
